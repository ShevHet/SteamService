version: "3.8"

services:
  db:
    image: postgres:15
    container_name: steam_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: steamaggregator
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: steam_backend
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=db;Port=5432;Database=steamaggregator;Username=postgres;Password=postgres"
      ASPNETCORE_URLS: "http://+:8080"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - appnet
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: steam_frontend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://backend:8080/api
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - appnet

volumes:
  pgdata:

networks:
  appnet:
    driver: bridge
